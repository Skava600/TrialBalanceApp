// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrialBalanceWebApp.Data;

#nullable disable

namespace TrialBalanceWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrialBalanceWebApp.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BankAccount")
                        .HasColumnType("integer");

                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<int>("OpeningBalanceId")
                        .HasColumnType("integer");

                    b.Property<int>("RevenueId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("OpeningBalanceId")
                        .IsUnique();

                    b.HasIndex("RevenueId")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.AccountClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BankId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("AccountClasses");
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Active")
                        .HasColumnType("double precision");

                    b.Property<double>("Passive")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.Revenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Credit")
                        .HasColumnType("double precision");

                    b.Property<double>("Debit")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Revenues");
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.Account", b =>
                {
                    b.HasOne("TrialBalanceWebApp.Entities.AccountClass", null)
                        .WithMany("Accounts")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrialBalanceWebApp.Entities.Balance", "OpeningBalance")
                        .WithOne()
                        .HasForeignKey("TrialBalanceWebApp.Entities.Account", "OpeningBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrialBalanceWebApp.Entities.Revenue", "Revenue")
                        .WithOne()
                        .HasForeignKey("TrialBalanceWebApp.Entities.Account", "RevenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpeningBalance");

                    b.Navigation("Revenue");
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.AccountClass", b =>
                {
                    b.HasOne("TrialBalanceWebApp.Entities.Bank", null)
                        .WithMany("AccountClasses")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.AccountClass", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("TrialBalanceWebApp.Entities.Bank", b =>
                {
                    b.Navigation("AccountClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
